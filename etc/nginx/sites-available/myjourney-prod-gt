# Redirection HTTP vers HTTPS
server {
    listen 80;
    server_name myjourney.grant-thornton.fr;
    return 301 https://$server_name$request_uri;
}

# Configuration HTTPS pour MyJourney Production
server {
    listen 443 ssl http2;
    server_name myjourney.grant-thornton.fr;
    
    # Certificats SSL
    ssl_certificate /etc/nginx/ssl/myjourney-prod-gt.crt;
    ssl_certificate_key /etc/nginx/ssl/myjourney-prod-gt.key;
    
    # Configuration SSL moderne
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Headers de sécurité pour MSAL
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains\" always;
    add_header X-Frame-Options "SAMEORIGIN\" always;
    add_header X-Content-Type-Options "nosniff\" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin\" always;
    
    # Page de test
    location /test {
        return 200 "MyJourney Production Server OK\n";
        add_header Content-Type text/plain;
    }
    
    # Redirection racine vers /myjourney/
    location = / {
        return 301 https://$server_name/myjourney/;
    }
    
    # Gestion des assets avec le bon chemin /myjourney/
    location ~ ^/myjourney/(.*\.(js|mjs|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot))$ {
        proxy_pass http://127.0.0.1:8080/$1;
        proxy_set_header Host $host;
        
        # Headers pour les assets
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Configuration pour l'application MyJourney (/myjourney/)
    location /myjourney/ {
        # Proxy vers Docker en supprimant le préfixe /myjourney/
        rewrite ^/myjourney/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        
        # Headers pour Angular
        proxy_set_header X-Forwarded-Prefix /myjourney;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Pas de cache pour l'application
        proxy_buffering off;
        proxy_cache off;
        
        # Gestion des erreurs
        proxy_intercept_errors off;
    }
    
    # Configuration pour l'API MyJourney (/api/myjourney/)
    location /api/myjourney/ {
        # Proxy vers l'API Docker sur port 3000
        rewrite ^/api/myjourney/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        
        # Headers pour l'API
        proxy_set_header X-Forwarded-Prefix /api/myjourney;
        
        # Timeouts pour l'API
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS headers pour l'API
        add_header Access-Control-Allow-Origin "https://myjourney.grant-thornton.fr\" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS\" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With\" always;
        add_header Access-Control-Allow-Credentials "true\" always;
        
        # Gestion des requêtes OPTIONS (preflight CORS)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://myjourney.grant-thornton.fr";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
}